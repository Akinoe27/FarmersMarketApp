Setting Up Virtual Environment and Flask

1. Create and Activate Virtual Environment
Open your command prompt and navigate to your project directory:
cd path\to\FarmersMarketApp

Create a virtual environment:
python -m venv venv

Activate the virtual environment:
venv\Scripts\activate
source venv/bin/activate


2. Install Flask and Flask-MySQLdb
Install Flask:
pip install flask

Install Flask-MySQLdb for database interaction:
pip install flask-mysqldb


3. Create requirements.txt
Generate a requirements.txt file:
pip freeze > requirements.txt

Setting Up Flask
## Step 2: Set Up Flask Application

Now that you have your virtual environment and project structure ready, it's time to set up the Flask application. Follow these detailed steps to get your Flask app up and running:

### Initialize the Flask App

Inside the `app` directory, you will find the `__init__.py` file. This is where we will initialize our Flask application.

1. Open the `__init__.py` file in your code editor.

2. Write the following Python code to initialize the Flask app:

```python
from flask import Flask

app = Flask(__name__)

# If you have additional configurations, you can set them here
# For example, to enable debug mode, you can add:
# app.config['DEBUG'] = True

from app import routes
Create Routes
The routes.py file is where you will define the routes for your application. These are the URLs that the app will respond to.

Open the routes.py file.

Start with a simple route for the home page:

from app import app
from flask import render_template

@app.route('/')
def index():
    return render_template('index.html')
This code defines a route for the root URL ('/'). When this URL is visited, the index() function will be called, which will render and return the index.html template.

Start the Flask Development Server
To see if your application is set up correctly, you can start the Flask development server.

Open the run.py file at the root of your project.

Add the following code to run.py:

from app import app

if __name__ == '__main__':
    app.run(debug=True)
Save the file.

Go back to your command prompt or terminal.

Make sure your virtual environment is activated.

Start the server with the following command:

python run.py
Open a web browser and navigate to http://127.0.0.1:5000/. You should see your index.html page rendered.